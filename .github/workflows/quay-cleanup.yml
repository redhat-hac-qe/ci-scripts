name: Quay cleanup

on:
  schedule:
   - cron: "0 0 * * 0"
  workflow_dispatch:
    
jobs:
  cleanup:
    name: Cleanup
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      TOKEN: ${{ secrets.QUAY_HAC_DEV_APP_TOKEN }}
      NAMESPACE: "hacdev"
    steps:
      - name: Delete Quay repository created by tests
        env:
          REPO_FILTER: "-tenant/"
        run: |
          while true; do
            response=$(curl -s -H "Content-Type: application/json" -H "Authorization: Bearer $TOKEN" "https://quay.io/api/v1/repository?namespace=$NAMESPACE&public=true&next_page=$next_page")
            REPOS=$(echo "$response" | jq -r '.repositories[].name' | grep -- $REPO_FILTER || true)
            for repo in $REPOS; do
              echo "DELETING REPO: $repo"
              curl -s -H "Content-Type: application/json" -H "Authorization: Bearer $TOKEN" -XDELETE "https://quay.io/api/v1/repository/$NAMESPACE/$repo"
            done
            next_page=$(echo $response | jq -r '.next_page')
            if [ $next_page == null ]; then
              break
            fi
          done
      - name: Delete Quay robot acc created by tests
        if: always()
        env:
          ROBOT_ACC_FILTER: "-tenant"
        run: |
          response=$(curl -s -H "Content-Type: application/json" -H "Authorization: Bearer $TOKEN" "https://quay.io/api/v1/organization/$NAMESPACE/robots?token=false")
          accs=$(echo $response | jq -r '.robots[].name' | grep -- $ROBOT_ACC_FILTER | sed 's/^hacdev+//g' || true)
          for acc in $accs; do
            echo "DELETING ROBOT ACC: $acc"
            curl -s -H "Content-Type: application/json" -H "Authorization: Bearer $TOKEN" -XDELETE "https://quay.io/api/v1/organization/$NAMESPACE/robots/$acc"
          done
